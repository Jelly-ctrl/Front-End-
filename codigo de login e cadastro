import java.awt.*;
import java.awt.image.BufferedImage;
import javax.swing.*;
import java.io.File;
import javax.imageio.ImageIO;
import java.io.IOException;

public class ArcadeLogin extends JFrame {
    private JTextField txtUsername;
    private JPasswordField txtPassword;
    private JButton btnLogin;
    private JButton btnRegister;

    public ArcadeLogin() {
        initializeUI();
    }

    private void initializeUI() {
        setTitle("Arcade Store Login");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1280, 720);
        setLocationRelativeTo(null); // Centers the frame on the screen

        // Set a new font for the entire UI
        Font customFont = new Font("Arial", Font.PLAIN, 18);
        Font buttonFont = new Font("Arial", Font.BOLD, 16);
        Font titleFont = new Font("Calibri", Font.BOLD, 50);

        // Background image
        ImagePanel backgroundPanel = new ImagePanel("arcade_bg.png");
        backgroundPanel.setLayout(new GridBagLayout());

        // Login panel
        JPanel loginPanel = new JPanel();
        loginPanel.setLayout(new BoxLayout(loginPanel, BoxLayout.Y_AXIS));
        loginPanel.setOpaque(false);
        loginPanel.setBorder(BorderFactory.createEmptyBorder(100, 20, 20, 20));

        // Welcome title with gradient color
        // Use the custom GradientLabel here
        JLabel label = new GradientLabel("Bem vindo ArcadeStore!", titleFont,
            new Color(0, 204, 255), // Start color (e.g., light blue)
            new Color(255, 51, 153)); // End color (e.g., vibrant pink)
        label.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Username components
        JLabel lblUser = new JLabel("USERNAME");
        lblUser.setFont(customFont);
        lblUser.setForeground(new Color(153, 204, 255)); // Light Blue
        lblUser.setAlignmentX(Component.CENTER_ALIGNMENT);
        txtUsername = new JTextField();
        txtUsername.setFont(customFont);
        txtUsername.setMaximumSize(new Dimension(250, 30));
        txtUsername.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Password components
        JLabel lblPass = new JLabel("PASSWORD");
        lblPass.setFont(customFont);
        lblPass.setForeground(new Color(153, 204, 255)); // Light Blue
        lblPass.setAlignmentX(Component.CENTER_ALIGNMENT);
        txtPassword = new JPasswordField();
        txtPassword.setFont(customFont);
        txtPassword.setMaximumSize(new Dimension(250, 30));
        txtPassword.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Login and register buttons
        btnLogin = new JButton("LOGIN");
        btnLogin.setFont(buttonFont);
        btnLogin.setBackground(new Color(0, 102, 204)); // Dark Blue
        btnLogin.setForeground(new Color(255, 255, 255)); // White
        btnLogin.setAlignmentX(Component.CENTER_ALIGNMENT);

        btnRegister = new JButton("CRIAR CONTA");
        btnRegister.setFont(buttonFont);
        btnRegister.setBackground(new Color(255, 51, 153)); // Vibrant Pink
        btnRegister.setForeground(new Color(255, 255, 255)); // White
        btnRegister.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Add components to the loginPanel
        loginPanel.add(label);
        loginPanel.add(Box.createRigidArea(new Dimension(0, 40)));
        loginPanel.add(lblUser);
        loginPanel.add(Box.createRigidArea(new Dimension(0, 5)));
        loginPanel.add(txtUsername);
        loginPanel.add(Box.createRigidArea(new Dimension(0, 20)));
        loginPanel.add(lblPass);
        loginPanel.add(Box.createRigidArea(new Dimension(0, 5)));
        loginPanel.add(txtPassword);
        loginPanel.add(Box.createRigidArea(new Dimension(0, 30)));
        loginPanel.add(btnLogin);
        loginPanel.add(Box.createRigidArea(new Dimension(0, 15)));
        loginPanel.add(btnRegister);

        // Add loginPanel to the backgroundPanel
        backgroundPanel.add(loginPanel, new GridBagConstraints());

        // Add backgroundPanel to the main frame
        setContentPane(backgroundPanel);

        // Action listeners
        btnLogin.addActionListener(e -> {
            String user = txtUsername.getText();
            String pass = new String(txtPassword.getPassword());

            if (user.equals("admin") && pass.equals("1234")) {
                JOptionPane.showMessageDialog(this, "Login bem-sucedido! ðŸŽ®");
            } else {
                JOptionPane.showMessageDialog(this, "UsuÃ¡rio ou senha incorretos!");
            }
        });

        btnRegister.addActionListener(e -> abrirTelaCadastro());
    }

    private void abrirTelaCadastro() {
        JFrame cadastroFrame = new JFrame("Criar Conta - Arcade Store");
        cadastroFrame.setSize(400, 400);
        cadastroFrame.setLocationRelativeTo(this);

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        // Create the new fonts
        Font customFont = new Font("Arial", Font.PLAIN, 16);
        Font buttonFont = new Font("Arial", Font.BOLD, 14);

        JLabel lblUser = new JLabel("Novo UsuÃ¡rio:");
        lblUser.setFont(customFont);
        JTextField txtNewUser = new JTextField();
        txtNewUser.setFont(customFont);
        txtNewUser.setMaximumSize(new Dimension(250, 30));

        JLabel lblPass = new JLabel("Nova Senha:");
        lblPass.setFont(customFont);
        JPasswordField txtNewPass = new JPasswordField();
        txtNewPass.setFont(customFont);
        txtNewPass.setMaximumSize(new Dimension(250, 30));

        JButton btnSave = new JButton("Registrar");
        btnSave.setFont(buttonFont);
        btnSave.setBackground(new Color(0, 102, 204)); // Dark Blue
        btnSave.setForeground(new Color(255, 255, 255)); // White

        btnSave.addActionListener(e -> {
            String novoUser = txtNewUser.getText();
            String novaSenha = new String(txtNewPass.getPassword());

            if (!novoUser.isEmpty() && !novaSenha.isEmpty()) {
                JOptionPane.showMessageDialog(cadastroFrame, "UsuÃ¡rio " + novoUser + " criado com sucesso!");
                cadastroFrame.dispose();
            } else {
                JOptionPane.showMessageDialog(cadastroFrame, "Preencha todos os campos!");
            }
        });

        panel.add(lblUser);
        panel.add(txtNewUser);
        panel.add(Box.createRigidArea(new Dimension(0, 15)));
        panel.add(lblPass);
        panel.add(txtNewPass);
        panel.add(Box.createRigidArea(new Dimension(0, 20)));
        panel.add(btnSave);

        cadastroFrame.add(panel);
        cadastroFrame.setVisible(true);
    }
    
    // Custom JPanel to handle the background image
    class ImagePanel extends JPanel {
        private BufferedImage image;
        public ImagePanel(String imagePath) {
            try {
                image = ImageIO.read(new File(imagePath));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            if (image != null) {
                g.drawImage(image, 0, 0, this.getWidth(), this.getHeight(), this);
            }
        }
    }

    // Custom JLabel to draw text with a gradient
    class GradientLabel extends JLabel {
        private Color color1;
        private Color color2;

        public GradientLabel(String text, Font font, Color c1, Color c2) {
            super(text);
            this.setFont(font);
            this.color1 = c1;
            this.color2 = c2;
        }

        @Override
        protected void paintComponent(Graphics g) {
            // Create a Graphics2D object for advanced drawing
            Graphics2D g2d = (Graphics2D) g;
            
            // Enable anti-aliasing for smoother text
            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);

            // Create a gradient paint object
            GradientPaint gp = new GradientPaint(
                0, 0, color1,
                getWidth(), getHeight(), color2);
            
            g2d.setPaint(gp);
            
            // Draw the text using the gradient paint
            FontMetrics fm = g2d.getFontMetrics();
            int x = (getWidth() - fm.stringWidth(getText())) / 2;
            int y = (getHeight() - fm.getHeight()) / 2 + fm.getAscent();
            
            g2d.drawString(getText(), x, y);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new ArcadeLogin().setVisible(true));
    }
}
